import java.util.*;


abstract class Patient{
private String patientId;
private String name;
private int age;


public Patient(String id,String name,int age){ this.patientId=id; this.name=name; this.age=age; }
public String getPatientId(){ return patientId; }
public String getName(){ return name; }
public int getAge(){ return age; }


public String getPatientDetails(){ return name + " (" + age + ") id=" + patientId; }
public abstract double calculateBill();
}


interface MedicalRecord{
void addRecord(String record);
List<String> viewRecords();
}


class InPatient extends Patient implements MedicalRecord{
private int daysAdmitted;
private List<String> records = new ArrayList<>();


public InPatient(String id,String name,int age,int days){ super(id,name,age); this.daysAdmitted = days; }
@Override public double calculateBill(){ return daysAdmitted * 2000 + 1500; }
@Override public void addRecord(String r){ records.add(r); }
@Override public List<String> viewRecords(){ return Collections.unmodifiableList(records); }
}


class OutPatient extends Patient implements MedicalRecord{
private List<String> records = new ArrayList<>();
public OutPatient(String id,String name,int age){ super(id,name,age); }
@Override public double calculateBill(){ return 500; }
@Override public void addRecord(String r){ records.add(r); }
@Override public List<String> viewRecords(){ return Collections.unmodifiableList(records); }
}


public class HospitalDemo{
public static void main(String[] args){
List<Patient> patients = Arrays.asList(new InPatient("IP01","Ravi",45,5), new OutPatient("OP01","Sita",30));
for(Patient p : patients){
System.out.println(p.getPatientDetails() + ", bill=" + p.calculateBill());
if(p instanceof MedicalRecord){
MedicalRecord mr = (MedicalRecord)p;
mr.addRecord("Checked on " + new Date());
System.out.println(" Records: " + mr.viewRecords());
}
}
}
}