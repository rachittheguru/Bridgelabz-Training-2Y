import java.util.*;


class Electronics extends Product implements Taxable{
public Electronics(String id,String name,double price){ super(id,name,price); }
@Override public double calculateDiscount(){ return getPrice() * 0.10; }
@Override public double calculateTax(){ return getPrice() * 0.18; }
@Override public String getTaxDetails(){ return "GST 18%"; }
}


class Clothing extends Product implements Taxable{
public Clothing(String id,String name,double price){ super(id,name,price); }
@Override public double calculateDiscount(){ return getPrice() > 1000 ? 150 : getPrice() * 0.05; }
@Override public double calculateTax(){ return getPrice() * 0.12; }
@Override public String getTaxDetails(){ return "GST 12%"; }
}


class Groceries extends Product{
public Groceries(String id,String name,double price){ super(id,name,price); }
@Override public double calculateDiscount(){ return 0; } // no discount
}


public class ECommerceDemo{
public static void printFinalPrices(List<Product> items){
for(Product p : items){
double tax = (p instanceof Taxable) ? ((Taxable)p).calculateTax() : 0;
double discount = p.calculateDiscount();
double finalPrice = p.getPrice() + tax - discount;
System.out.printf("%s (%s): base=%.2f, tax=%.2f, disc=%.2f, final=%.2f\n",
p.getName(), p.getClass().getSimpleName(), p.getPrice(), tax, discount, finalPrice);
}
}


public static void main(String[] args){
List<Product> cart = Arrays.asList(
new Electronics("E100","Phone",20000),
new Clothing("C101","Jacket",2500),
new Groceries("G200","Rice 5kg",400)
);
printFinalPrices(cart);
}
}