import java.util.*;
interface Discountable{
double applyDiscount();
String getDiscountDetails();
}


class VegItem extends FoodItem implements Discountable{
public VegItem(String name,double price,int qty){ super(name,price,qty); }
@Override public double calculateTotalPrice(){ return getPrice()*getQuantity(); }
@Override public double applyDiscount(){ return calculateTotalPrice() > 500 ? calculateTotalPrice()*0.05 : 0; }
@Override public String getDiscountDetails(){ return "5% over 500"; }
}


class NonVegItem extends FoodItem implements Discountable{
public NonVegItem(String name,double price,int qty){ super(name,price,qty); }
@Override public double calculateTotalPrice(){ return getPrice()*getQuantity() + 50; } // extra charge
@Override public double applyDiscount(){ return 0; }
@Override public String getDiscountDetails(){ return "No discount"; }
}


public class FoodDeliveryDemo{
public static void main(String[] args){
List<FoodItem> order = Arrays.asList(new VegItem("Paneer Butter Masala",200,2), new NonVegItem("Chicken Biryani",250,1));
double total = 0;
for(FoodItem f : order){
double price = f.calculateTotalPrice();
double disc = (f instanceof Discountable) ? ((Discountable)f).applyDiscount() : 0;
System.out.println(f.getItemDetails() + ", discount="+disc);
total += price - disc;
}
System.out.println("Order total = " + total);
}
}